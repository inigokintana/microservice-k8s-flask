apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgvector
  namespace: pgvector
  labels:
    app: pgvector
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pgvector
  template:
    metadata:
      labels:
        app: pgvector
      annotations:
        dapr.io/enabled: "true"
        dapr.io/app-id: "pgvector"
        dapr.io/enable-api-logging: "true"
        #dapr.io/config: "apppoems"
        dapr.io/sidecar-inject: "true"
        dapr.io/sidecar-inject-annotation: "true"
        dapr.io/sidecar-liveness-probe-delay-second: "10"
        dapr.io/sidecar-liveness-probe-timeout-seconds: "70"
    spec:
      containers:
      - name: vectorizer-worker
        image: timescale/pgai-vectorizer-worker:latest
        args:
          - --poll-interval
          - 5s
          - --log-level
          - DEBUG
        env:
        - name: PGAI_VECTORIZER_WORKER_DB_URL
          #  if you want to create to dvdrental database
          # value: postgres://postgres:pgvector@pgvector:5432/dvdrental
          # This connect to postgres Database 
          # password was stored in secret - how to get it from there secretRef:name: pgvectorconfig?
          value: postgres://postgres:pgvector@localhost:5432/postgres
        - name: OLLAMA_HOST
          value: http://ollama.ollama.svc.cluster.local
      - name: pgvector
        # Use the pgvector image for PostgreSQL 17 https://hub.docker.com/r/pgvector/pgvector/tags
        # image: pgvector/pgvector:pg17
        image: timescale/timescaledb-ha:pg17
        args:
          - -c
          - ai.ollama_host=http://ollama-llm.ollama
        ports:
        - name: pgvectorport
          containerPort: 5432
          protocol: TCP
        envFrom:
        - secretRef:
            name: pgvectorconfig
        volumeMounts:
        - mountPath: /home/postgres/pgdata/data
          name: pgdata
      volumes:
      - name: pgdata
        persistentVolumeClaim:
          claimName: pgdata-pvc
